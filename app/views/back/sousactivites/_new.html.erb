<p id="error-message" class="alert alert-danger" style="display:none;"></p>

<%= form_for(@sousactivite, url: @sousactivite.persisted? ? back_sousactivite_path(@sousactivite.id) : back_sousactivites_path, html: { class: "form"}) do |f| %>

<div class="row">
  <div class="span1">
    <div class="control-group" style="height:60px;padding-top:5px;">
      Nom
    </div>
  </div>
  <div class="span2">
    <div class="control-group" style='height:60px;'>
      <%= f.text_field :title, :style => "width:300px;" %>
    </div>
  </div>
</div>

<%= f.hidden_field :activite_id, :value => @sousactivite.activite_id %>

<div class="form-actions">
  <a class="btn-end btn btn-primary">Valider</a>
  <a class="close-popup-link btn btn-inverse">Fermer</a>
</div>

<% end %>

<script type="text/javascript">
var sousactivite_ready = function() {
  // Fields in error
  var fields_in_error = new Array();

  // Init the error messages
  function init_error(){
    $('#error-message').hide();
    fields_in_error.forEach(function(field) {
      $(field).parent().removeClass('error');
    });
    fields_in_error = new Array();
  }

  // Show list of errors
  // If exists => return true
  // If no error => return false
  function is_error(message){
    message = typeof message !== 'undefined' ? message : "Champs requis";

    if (fields_in_error.length == 0) return false;
    fields_in_error.forEach(function(field) {
      $(field).parent().addClass('error');
    });
    $('#error-message').text(message);
    $('#error-message').show();

    return true;
  }

  // Validation of form
  function check_form(){
    message = "<%= I18n.t('message.error.field_required') %>";
    if ($('#sousactivite_title').val() == '') fields_in_error.push('#sousactivite_title');

    // Submit form if no error
    return !is_error(message, 'event_title');
  }

  $('.btn-end').on('click', function(){
    init_error();
    if (check_form()) $( ".form" ).submit();
  });

};
$(document).ready(sousactivite_ready);
$(document).on('page:load', sousactivite_ready);
</script>
